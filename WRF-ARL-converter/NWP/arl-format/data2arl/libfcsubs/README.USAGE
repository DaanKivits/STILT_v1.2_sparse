The fcsubs routines provide a facility to FORTRAN-77 programs to read,
write, and manipulate binary files created by other facilities, which
do not have the usual UNFORMATTED formatting.

These routines should be used on files that are not concurrently OPENed
which standard FORTRAN I/O routines.

To use, insert the appropriate TYPE statements and FUNCTION or CALL
statements, as defined below.  Link the library associated with your
FORTRAN compiler (e.g. g77, whose library is named libg77fcsubs.a)
using, e.g.

g77 -o myprog myprog.f -Llibpath -lg77fcsubs

where libpath is the directory in which libg77fcsubs.a is located.  If
using a different compiler, e.g. f90, replace g77 with f90 throughout
and libpath with the location of the libf90fcsubs.a library, configured and
compiled for the f90 compiler, is located.

Following are the TYPE statements and CALLs used by fcsubs:


	CHARACTER * 40 FNAME
C  Name of the file being read/written to
	CHARACTER * 2 ACCESS
C  use 'r' for read, 'w' for write, 'rw' for both
	CHARACTER *80 BUFFER
	INTEGER HANDLE,LENGTH,POS
        INTEGER WIDTH,COUNT

	INTEGER FCOPEN,FCLEN,FCGTPS

	HANDLE = FCOPEN(FNAME, ACCESS)
C causes INTEGER FUNCTION FCOPEN to open the file named FNAME
C for access defined by ACCESS, and returns file identifier as
C an integer in HANDLE.  In the event of an error, HANDLE will
C be negative.

C---------------    FILE SIZE ROUTINES --------------------------


	LENGTH = FCLEN(HANDLE)
C Returns the length in bytes of the file whose identifier is HANDLE.  In
C the event of an error, a negative number is returned.

	CALL FCTRNC(HANDLE, LENGTH, *err)
C truncates the file whose identifier is HANDLE to the size LENGTH bytes.
C In the case of an error, transfers control to the statement labeled err.

C---------------   FILE POSITION ROUTINES ------------------------

	POS = FCGTPS(HANDLE) 
C returns the current position (offset in bytes from beginning) within
C the file whose identifier is HANDLE.  In the event of an error, a
C negative number will be returned in POS.

	CALL FCPTPS(HANDLE, POS, *err)
C moves the file whose identifier is HANDLE to the position (bytes offset
C from beginning) given by POS.  In the case of failure, control will
C be transferred to the statement labeled err.

C---------------   READ/WRITE ROUTINES  -------------------------

	CALL FCREAD(HANDLE, BUFFER, WIDTH, COUNT, *err)
C reads COUNT groups of ABS(WIDTH) bytes from the file whose identifier
C is HANDLE and places them in BUFFER.  If WIDTH is less than zero,
C each group of bytes will be reversed in order, low byte to high byte.
C This will assist reading binary data written by machines of opposite
C Endian-orientation.  In case of error, control will be transferred
C to the statement labeled err.

	CALL FCWRIT(HANDLE, BUFFER, WIDTH, COUNT, *err)
C writes COUNT groups of ABS(WIDTH) bytes from BUFFER to the file whose
C identifier is HANDLE.  If WIDTH is less than zero, each group of bytes
C will be reversed in order, low byte to high byte. This will assist
C writing binary data to be read by machines of opposite Endian-orientation.
C In case of error, control will be transferred to the statement labeled err.

C-----------------   CLOSE FILE --------------------------------

	CALL FCCLOS(HANDLE, *err)
C Closes the file whose identifier is HANDLE.  In case of error, control
C will be transferred to the stetement labeled err.

C------------------  ANCILLARY ROUTINE -------------------------

	CALL SWAP(BUFFER, WIDTH, COUNT) 
C Reverses the Endian-orientation of Count groups of size WIDTH each,
C starting at BUFFER.  This will ease manipulation of mixed binary
C records written by machines of opposite Endian-ness.

